version: "3.7"

networks:
  kafka-network:
    driver: bridge

services:

  kafka-connect:
    container_name: kafka-connect
    image: 'confluentinc/cp-kafka-connect:6.2.0'
    ports:
      - '8083:8083'
    hostname: connect
    networks:
      - kafka-network
    volumes:
      - ./connectors:/connectors
    command: sh -c /connectors/start-configuration.sh
    environment:
      ZOOKEEPER_HOSTS: "zookeeper:2181" # env-var for starting script
      CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'connect'
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: 'connect-group'
      CONNECT_CONFIG_STORAGE_TOPIC: 'my-connect-config'
      CONNECT_OFFSET_STORAGE_TOPIC: 'my-connect-offsets'
      CONNECT_STATUS_STORAGE_TOPIC: 'my-connect-status'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1" # needed for docker, otherwise they will be created with 3 partitions
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_KEY_CONVERTER: 'org.apache.kafka.connect.storage.StringConverter'
      CONNECT_VALUE_CONVERTER: 'org.apache.kafka.connect.storage.StringConverter'
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"